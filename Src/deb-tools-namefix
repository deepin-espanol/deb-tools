#!/bin/sh

Fmt='printf'
set -f
IFS="
"

CURLANG="${LANGUAGE%%_*}" # Get locale.

NOT_A_DEB="Error: '%s' is not a valid .deb file."
LOOKING_DEB="Looking for .deb files in '%s'..."
DOESNT_EXIST="'%s' does not exist."
MUST_SPECIFY="You must specify at least one file or folder."

case "$CURLANG" in
es)
	NOT_A_DEB="Error: «%s» no es archivo .deb válido."
	LOOKING_DEB="Buscando archivos .deb en «%s»..."
	DOESNT_EXIST="«%s» no existe."
	MUST_SPECIFY="Debe especificar al menos un archivo o carpeta."
	;;
esac

FixName() {
	FILE=$*

	if ! dpkg-deb --info "$FILE" >/dev/null 2>&1; then # It is not a valid .deb file!
		$Fmt >&2 "$NOT_A_DEB\n" "$FILE"
		return 1
	fi

	INFO_PACKAGE=$(dpkg-deb -f "$FILE" package version architecture | cut -d " " -f2)
	NAME_PACKAGE=$(echo "$INFO_PACKAGE" | cut -d " " -f1)
	VER_PACKAGE=$(echo "$INFO_PACKAGE" | cut -d " " -f2)
	ARCH_PACKAGE=$(echo "$INFO_PACKAGE" | cut -d " " -f3)

	NEW_NAME="$(dirname "$FILE")/${NAME_PACKAGE}_${VER_PACKAGE}_${ARCH_PACKAGE}.deb"

	if [ "$FILE" != "$NEW_NAME" ]; then
		mv "$FILE" "$NEW_NAME"
		echo -
		echo "$FILE"
		echo "↓"
		echo "$NEW_NAME"
		echo -
	fi
}

LocateDebs() {
	$Fmt "$LOOKING_DEB\n" "$@"
	LIST_FILES=$(find "$@" -type f -iname "*.deb")

	for i in $LIST_FILES; do
		FixName "$i"
	done

	return 0
}

if [ "$@" ]; then
	for i in "$@"; do
		if [ -f "$i" ]; then
			FixName "$i"
		elif [ -d "$i" ]; then
			LocateDebs "$i"
		else
			$Fmt "$DOESNT_EXIST\n" "$i"
		fi
	done
else
	echo >&2 "$MUST_SPECIFY"
	exit 1
fi

set +f
unset IFS

exit 0
